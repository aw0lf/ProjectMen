{"ast":null,"code":"import _classCallCheck from \"/home/adrianna/Dokumenty/last/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/adrianna/Dokumenty/last/frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/adrianna/Dokumenty/last/frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/adrianna/Dokumenty/last/frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/adrianna/Dokumenty/last/frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/adrianna/Dokumenty/last/frontend/src/containers/LoginContainer.js\";\nimport React, { Component } from 'react';\nimport { Form, Icon, Input, Button } from 'antd';\nimport { connect } from 'react-redux';\nimport * as actions from '../store/actions/auth';\nimport { Redirect } from 'react-router-dom';\nvar FormItem = Form.Item;\n\nvar LoginContainer =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(LoginContainer, _Component);\n\n  function LoginContainer() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, LoginContainer);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(LoginContainer)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.handleSubmit = function (e) {\n      e.preventDefault();\n\n      _this.props.form.validateFields(function (err, values) {\n        if (!err) {\n          console.log('Received values of form: ', values);\n\n          _this.props.onAuth(values.userName, values.password); //  this.props.history.push('/');\n          //this.forceUpdate();\n\n        }\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(LoginContainer, [{\n    key: \"render\",\n    value: function render() {\n      console.log(this.props.isAuthenticated);\n\n      if (this.props.isAuthenticated) {\n        return React.createElement(Redirect, {\n          to: \"/\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 26\n          },\n          __self: this\n        });\n      }\n\n      var errorMessage = null;\n\n      if (this.props.error) {\n        errorMessage = React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32\n          },\n          __self: this\n        }, this.props.error.message);\n      }\n\n      var getFieldDecorator = this.props.form.getFieldDecorator;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, errorMessage, this.props.loading ? React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, \"loading\") : React.createElement(Form, {\n        onSubmit: this.handleSubmit,\n        className: \"login-form\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, React.createElement(FormItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, getFieldDecorator('userName', {\n        rules: [{\n          required: true,\n          message: 'Please input your username!'\n        }]\n      })(React.createElement(Input, {\n        prefix: React.createElement(Icon, {\n          type: \"user\",\n          style: {\n            color: 'rgba(0,0,0,.25)'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49\n          },\n          __self: this\n        }),\n        placeholder: \"Username\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }))), React.createElement(FormItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, getFieldDecorator('password', {\n        rules: [{\n          required: true,\n          message: 'Please input your Password!'\n        }]\n      })(React.createElement(Input, {\n        prefix: React.createElement(Icon, {\n          type: \"lock\",\n          style: {\n            color: 'rgba(0,0,0,.25)'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56\n          },\n          __self: this\n        }),\n        type: \"password\",\n        placeholder: \"Password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }))), React.createElement(FormItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(Button, {\n        type: \"primary\",\n        htmlType: \"submit\",\n        className: \"login-form-button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, \"Log in\"))));\n    }\n  }]);\n\n  return LoginContainer;\n}(Component);\n\nvar WrappedLoginContainer = Form.create()(LoginContainer);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    loading: state.loading,\n    error: state.error,\n    isAuthenticated: state.token !== null\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    onAuth: function onAuth(username, password) {\n      return dispatch(actions.authLogin(username, password));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WrappedLoginContainer);","map":{"version":3,"sources":["/home/adrianna/Dokumenty/last/frontend/src/containers/LoginContainer.js"],"names":["React","Component","Form","Icon","Input","Button","connect","actions","Redirect","FormItem","Item","LoginContainer","handleSubmit","e","preventDefault","props","form","validateFields","err","values","console","log","onAuth","userName","password","isAuthenticated","errorMessage","error","message","getFieldDecorator","loading","rules","required","color","WrappedLoginContainer","create","mapStateToProps","state","token","mapDispatchToProps","dispatch","username","authLogin"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Form, Icon, Input, Button } from 'antd';\nimport { connect } from 'react-redux';\nimport * as actions from '../store/actions/auth';\nimport { Redirect } from 'react-router-dom';\n\nconst FormItem = Form.Item;\n\nclass LoginContainer extends Component {\n\n  handleSubmit = (e) => {\n      e.preventDefault();\n      this.props.form.validateFields((err, values) => {\n          if (!err) {\n              console.log('Received values of form: ', values);\n              this.props.onAuth(values.userName, values.password);\n              //  this.props.history.push('/');\n              //this.forceUpdate();\n          }\n      });\n  }\n\n  render () {\n      console.log(this.props.isAuthenticated);\n      if (this.props.isAuthenticated) {\n          return <Redirect to=\"/\" />;\n      }\n\n      let errorMessage = null;\n      if (this.props.error) {\n          errorMessage = (\n              <p>{this.props.error.message}</p>\n          );\n      }\n\n      const { getFieldDecorator } = this.props.form;\n      return (\n          <div>\n              {errorMessage}\n              {\n                  this.props.loading ?\n                      <p>loading</p>\n                      :\n                      <Form onSubmit={this.handleSubmit} className=\"login-form\">\n                          <FormItem>\n                              {getFieldDecorator('userName', {\n                                  rules: [{ required: true, message: 'Please input your username!' }]\n                              })(\n                                  <Input prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />} placeholder=\"Username\" />\n                              )}\n                          </FormItem>\n                          <FormItem>\n                              {getFieldDecorator('password', {\n                                  rules: [{ required: true, message: 'Please input your Password!' }]\n                              })(\n                                  <Input prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />} type=\"password\" placeholder=\"Password\" />\n                              )}\n                          </FormItem>\n                          <FormItem>\n                              <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\n             Log in\n                              </Button>\n                          </FormItem>\n                      </Form> }\n          </div>\n      );\n  }\n}\nconst WrappedLoginContainer = Form.create()(LoginContainer);\n\nconst mapStateToProps = (state) => {\n    return {\n        loading: state.loading,\n        error: state.error,\n        isAuthenticated: state.token !== null\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onAuth: (username, password) => dispatch(actions.authLogin(username, password))\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WrappedLoginContainer);\n"]},"metadata":{},"sourceType":"module"}